#!/usr/bin/python

import gi

gi.require_version("Gtk", "3.0")
from gi.repository import Gtk, Gdk

import sys


class HexWindow(Gtk.Window):
    def __init__(self, size):
        super(HexWindow, self).__init__()
        self.size = size
        self.init_ui()


    def init_ui(self):
        darea = Gtk.DrawingArea()
        darea.connect("draw", self.on_draw)
        darea.add_events(Gdk.EventMask.BUTTON_PRESS_MASK)
        darea.connect("button_press_event", self.on_click)
        self.add(darea)

        self.set_title("xgui")
        self.set_default_size(3 * self.size, 2 * self.size)

        self.connect("destroy", Gtk.main_quit)


    def on_draw(self, da, ctx):
        s = self.size
        ctx.set_source_rgb(1, 0, 0)
        ctx.move_to(s, 0)
        ctx.line_to(2 * s, 0)
        ctx.line_to(3 * s, s)
        ctx.line_to(2 * s, 2 * s)
        ctx.line_to(s, 2 * s)
        ctx.line_to(0, s)
        ctx.line_to(s, 0)
        ctx.fill()


    def on_click(self, widget, event):
        s = self.size
        x, y = event.x, event.y
        if (((s <= x <= 2 * s) and (0 <= y <= 2*s)) or
            ((x < s) and (abs(y - s) <= x)) or
            ((2 * s < x <= 3 * s) and (abs(y - s) < (3 * s - x)))):
            Gtk.main_quit()


def usage_exit():
    print("usage: ./xgui positive-integer")
    sys.exit()


if len(sys.argv) < 2:
    usage_exit()

try:
    size = int(sys.argv[1])
except ValueError:
    usage_exit()
if (size <= 0):
    usage_exit()

win = HexWindow(size)
win.show_all()
Gtk.main()
